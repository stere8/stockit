@page "/ProductEdit"
@using System.Globalization
@using StockIT.Models
@model StockIT.Pages.ProductEditModel

<head>
    <script src="~/ckeditor/ckeditor.js"></script>
</head>

<h2>Edit Product</h2>

<form method="post">

    <div class="form-group">
        <label for="@Model.ProductModel.Name">Name:</label>
        <input type="text" value="@Model.ProductModel.Name" id="Name" name="Name" required>
    </div>

    <div class="form-group">
        <label for="@Model.ProductModel.Description">Description:</label>
        <textarea id="description" name="Description" required>@Html.Raw(@Model.ProductModel.Description)</textarea>
    </div>

    <div class="form-group">
        <label for="@Model.ProductModel.Quantity">Quantity:</label>
        <input type="number" id="Quantity" value="@Model.ProductModel.Quantity" name="Quantity" required>
    </div>
    <div class="form-group">
        <label for="@Model.ProductModel.Price">Price</label>
        <input type="number" id="Price" name="Price" value="@Model.ProductModel.Price.ToString(CultureInfo.InvariantCulture)" required step="0.01">
    </div>

    <div class="form-group">
        <label for="@Model.ProductModel.CategoryId">Category:</label>
        <select id="@Model.ProductModel.CategoryId" name="CategoryId" required>
            <option disabled value="">-- Choose Product Category</option>
            @foreach (Category category in @Model.Categories)
            {
                <!option @(category.Id == Model.ProductModel.CategoryId ? "selected" : "") value="@category.Id">@category.Name</!option>
            }
        </select>
    </div>
    <script>
        ClassicEditor
            .create(document.querySelector("#description"))
            .catch( error => {
                console.error( error ).minHeight ;
            } );
    </script>
    @foreach (var path in Model.ProductModel.ImagesList)
    {
        <div class="form-group">
            <label for="@Model.ProductModel.Images">Product Images (Optional):</label>
            <input type="file" id="@Model.ProductModel.Images" name="Images" multiple value="@path" accept="image/*" class="form-control">
        </div>
    }


    @if ((Model.ProductModel.ImagesList.Any()))
    {
        <div class="form-group">

            <div id="product-carousel" class="carousel slide" data-ride="carousel" data-interval="false">
                <div class="carousel-inner">
                    @foreach (string image in Model.ProductModel.ImagesList)
                    {
                        <div class="carousel-item" @(Model.ProductModel.ImagesList.IndexOf(image) == 0 ? "active" : "")>
                            <img class="d-block w-100" src="@image" alt="Product Image">
                        </div>
                    }
                </div>
                <a class="carousel-control-prev" href="#product-carousel" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#product-carousel" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
    }

    <div class="form-group">
        <label for="@Model.ProductModel.DeleteImage">Delete Existing Images (Select by index):</label>
        <input type="text" id="@Model.ProductModel.DeleteImage" name="DeleteImage" class="form-control">
        <small id="@Model.ProductModel.DeleteImage" class="form-text text-muted">
            Enter comma-separated indexes (e.g., 1, 3) of images to delete.
        </small>
    </div>

    <button type="submit">Save Changes</button>
</form>

